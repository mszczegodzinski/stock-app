{"version":3,"sources":["components/ErrorComponent/ErrorComponent.js","types.js","actions/actions.js","utils/utils.js","components/StockList/StockList.js","components/SearchComponent/SearchComponent.js","components/VolumeComponent/VolumeComponent.js","components/PositionList/PositionList.js","components/TransactionCard/TransactionCard.js","components/Dashboard/Dashboard.js","components/Footer/Footer.js","components/HomePage/HomePage.js","App.js","reducers/dashboardReducer.js","store.js","index.js"],"names":["ErrorComponent","message","Grid","item","xs","sm","md","lg","style","textAlign","marginBottom","types","FETCH_TIME_SERIES_DAILY_ADJUSTED_SUCCESSFULLY","FETCH_TIME_SERIES_DAILY_ADJUSTED_FAILED","FETCH_SEARCH_ENDPOINT_DATA","IS_SEARCH_DATA_LOADING","FETCH_OVERVIEW_DATA_SUCCESSFULLY","FETCH_OVERVIEW_DATA_FAILED","FETCH_GLOBAL_QUOTE_FAILED","FETCH_GLOBAL_QUOTE_SUCCESSFULLY","RESET_GLOBAL_QUOTE","IS_OVERVIEW_DATA_LOADING","SAVE_OPEN_POSITIONS","RESET_OPEN_POSITIONS","fetchUrl","key","process","REACT_APP_KEY","resetGlobalQuoteCompany","dispatch","type","resetOpenPositions","payload","utils","validateInput","value","some","el","includes","validateVolume","test","getGridCenteredProps","width","container","justify","alignItems","cardStyle","padding","backgroundColor","color","connect","state","searchedData","isSearchedDataFetchedSuccessfully","filteredData","showTransactionWindow","useState","isNoResult","setIsNoResult","useEffect","length","className","marginTop","map","i","minWidth","Button","onClick","Card","marginRight","textTransform","renderStockList","renderNoResultMessage","renderDefaultMessage","error","actions","getSearchComponentData","searchedPhrase","fetch","method","headers","Accept","then","resp","json","data","isSearchedDataFetchedFailed","bestMatches","catch","err","closeSearchDataNotification","setSearchDataLoading","currentValue","isSearchDataLoading","setSearchedPhrase","stockInputError","setStockInputError","market","setMarket","marketOptions","setMarketOptions","setFilteredData","textFieldDisabledCondition","searchButtonDisabled","onKeyDown","e","keyCode","preventDefault","window","addEventListener","removeEventListener","searchNotificationTimeout","setTimeout","clearTimeout","duplicates","distinctValues","Set","filterResult","filter","TextField","id","label","variant","disabled","helperText","onChange","isValueIncorrect","target","handleSearchComponentChange","transition","margin","Autocomplete","options","getOptionLabel","marketOption","event","newValue","renderInput","params","CircularProgress","Snackbar","open","anchorOrigin","vertical","horizontal","onClose","Alert","icon","elevation","cellStyle","border","borderRadius","cellStyleInside","borderTop","counterBtnStyle","minorTextStyle","fontSize","VolumeComponent","volumeCounter","setVolumeCounter","volumeError","setVolumeError","result","setVolume","inputProps","direction","positionElementStyle","fontWeight","PositionList","showPositionInfo","allOpenPositionsFiltered","saveOpenPositions","allOpenPositions","renderRows","Checkbox","checkedIcon","currentClickedIndex","parseInt","name","positionToCompareIndex","findIndex","isChecked","handleCheckPosition","checked","symbol","volume","price","minHeight","opacity","height","currentSize","itemSize","itemCount","renderSwipeableList","CustomButton","withStyles","root","display","flexDirection","getTimeSeriesDailyAdjusted","getOverview","console","log","getGlobalQuoteCompany","setOverviewDataLoading","openPositions","isTimeSeriesDailyAdjustedFetchedSuccessfully","isTimeSeriesDailyAdjustedFetchedFailed","timesSeriesDailyAdjusted","overviewData","globalQuote","isGlobalQuoteFetchSuccessfully","isGlobalQuoteFetchFailed","isOverviewDataFetchedSuccessfully","isOverviewDataLoading","companySymbol","title","isDescriptionVisible","setIsDescriptionVisible","apiError","setApiError","sellErrorMessage","setSellErrorMessage","setShowPositionInfo","disabledButton","setAllOpenPositionsFiltered","filteredPositions","sellErrorMessageTimeout","toggleShowDescription","TextareaAutosize","rowsMax","condition","maxWidth","maxHeight","renderTextArea","checkedPositionIndex","checkedPosition","mappedResult","handleClosePosition","parseFloat","toFixed","calculateSellPrice","parsedPrice","handleOpenPosition","renderSellErrorMessage","wrapperStyle","boxSizing","flexGrow","searchModuleStyle","transactionWindow","setTransactionWindow","to","textDecoration","company","onConfirm","onCancel","showConfirm","footerStyle","Footer","justifyContent","HomePage","Typography","App","path","initialState","isIntradayDataLoading","isDailyAdjustedDataLoading","isOverviewDataFetchedFailed","dashboardReducer","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acb20d68.chunk.js","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\n\nconst ErrorComponent = ({ message }) => {\n  return (\n    <Grid item xs={12} sm={12} md={12} lg={12}>\n      <h3 style={{ textAlign: \"center\", marginBottom: \"30px\" }}>{message}</h3>\n    </Grid>\n  );\n};\n\nexport default ErrorComponent;\n","const IS_OVERVIEW_DATA_LOADING = \"IS_OVERVIEW_DATA_LOADING\";\nconst IS_SEARCH_DATA_LOADING = \"IS_SEARCH_DATA_LOADING\";\nconst FETCH_GLOBAL_QUOTE_FAILED = \"FETCH_GLOBAL_QUOTE_FAILED\";\nconst FETCH_GLOBAL_QUOTE_SUCCESSFULLY = \"FETCH_GLOBAL_QUOTE_SUCCESSFULLY\";\nconst FETCH_OVERVIEW_DATA_SUCCESSFULLY = \"FETCH_OVERVIEW_DATA_SUCCESSFULLY\";\nconst FETCH_OVERVIEW_DATA_FAILED = \"FETCH_OVERVIEW_DATA_FAILED\";\nconst FETCH_SEARCH_ENDPOINT_DATA = \"FETCH_SEARCH_ENDPOINT_DATA\";\nconst FETCH_TIME_SERIES_DAILY_ADJUSTED_SUCCESSFULLY =\n  \"FETCH_TIME_SERIES_DAILY_ADJUSTED_SUCCESSFULLY\";\nconst FETCH_TIME_SERIES_DAILY_ADJUSTED_FAILED = \"FETCH_TIME_SERIES_DAILY_ADJUSTED_FAILED\";\nconst RESET_GLOBAL_QUOTE = \"RESET_GLOBAL_QUOTE\";\nconst RESET_OPEN_POSITIONS = \"RESET_OPEN_POSITIONS\";\nconst SAVE_OPEN_POSITIONS = \"SAVE_OPEN_POSITIONS\";\n\nconst types = {\n  FETCH_TIME_SERIES_DAILY_ADJUSTED_SUCCESSFULLY,\n  FETCH_TIME_SERIES_DAILY_ADJUSTED_FAILED,\n  FETCH_SEARCH_ENDPOINT_DATA,\n  IS_SEARCH_DATA_LOADING,\n  FETCH_OVERVIEW_DATA_SUCCESSFULLY,\n  FETCH_OVERVIEW_DATA_FAILED,\n  FETCH_GLOBAL_QUOTE_FAILED,\n  FETCH_GLOBAL_QUOTE_SUCCESSFULLY,\n  RESET_GLOBAL_QUOTE,\n  IS_OVERVIEW_DATA_LOADING,\n  SAVE_OPEN_POSITIONS,\n  RESET_OPEN_POSITIONS,\n};\nexport default types;\n","import types from \"../types\";\n\nconst fetchUrl = \"https://www.alphavantage.co/query?function=\";\nconst key = process.env.REACT_APP_KEY;\n\nexport const getTimeSeriesDailyAdjusted = (symbol) => (dispatch) => {\n  fetch(`${fetchUrl}TIME_SERIES_DAILY_ADJUSTED&symbol=${symbol}&apikey=${key}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((resp) => {\n      return resp.json();\n    })\n    .then((data) => {\n      // console.log(\"time series daily adjusted \", data);\n      dispatch({\n        type: types.FETCH_TIME_SERIES_DAILY_ADJUSTED_SUCCESSFULLY,\n        payload: data,\n      });\n    })\n    .catch((err) => {\n      dispatch({ type: types.FETCH_TIME_SERIES_DAILY_ADJUSTED_FAILED });\n    });\n};\n\nexport const getGlobalQuoteCompany = (symbol) => (dispatch) => {\n  resetGlobalQuoteCompany();\n  fetch(`${fetchUrl}GLOBAL_QUOTE&symbol=${symbol}&apikey=${key}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((resp) => {\n      return resp.json();\n    })\n    .then((data) => {\n      // console.log(\"global quote \", data);\n      dispatch({\n        type: types.FETCH_GLOBAL_QUOTE_SUCCESSFULLY,\n        payload: data,\n      });\n    })\n    .catch((err) => {\n      dispatch({ type: types.FETCH_GLOBAL_QUOTE_FAILED });\n    });\n};\n\nexport const resetGlobalQuoteCompany = () => (dispatch) => {\n  dispatch({ type: types.RESET_GLOBAL_QUOTE });\n};\n\nexport const getSearchComponentData = (searchedPhrase) => (dispatch) => {\n  dispatch({ type: types.IS_SEARCH_DATA_LOADING, payload: true });\n  fetch(`${fetchUrl}SYMBOL_SEARCH&keywords=${searchedPhrase}&apikey=${key}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((resp) => {\n      return resp.json();\n    })\n    .then((data) => {\n      dispatch({ type: types.IS_SEARCH_DATA_LOADING, payload: false });\n      dispatch({\n        type: types.FETCH_SEARCH_ENDPOINT_DATA,\n        isSearchedDataFetchedSuccessfully: true,\n        isSearchedDataFetchedFailed: false,\n        payload: data.bestMatches,\n      });\n    })\n    .catch((err) => {\n      dispatch({ type: types.IS_SEARCH_DATA_LOADING, payload: false });\n      dispatch({\n        type: types.FETCH_SEARCH_ENDPOINT_DATA,\n        isSearchedDataFetchedSuccessfully: false,\n        isSearchedDataFetchedFailed: true,\n        payload: [],\n      });\n    });\n};\n\nexport const closeSearchDataNotification = (searchedData) => (dispatch) => {\n  dispatch({\n    type: types.FETCH_SEARCH_ENDPOINT_DATA,\n    payload: searchedData,\n    isSearchedDataFetchedSuccessfully: false,\n    isSearchedDataFetchedFailed: false,\n  });\n};\n\nexport const setSearchDataLoading = (currentValue) => (dispatch) => {\n  dispatch({ type: types.IS_SEARCH_DATA_LOADING, payload: currentValue });\n};\n\nexport const getOverview = (symbol) => (dispatch) => {\n  dispatch({ type: types.IS_OVERVIEW_DATA_LOADING, payload: true });\n  fetch(`${fetchUrl}OVERVIEW&symbol=${symbol}&apikey=${key}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((resp) => {\n      return resp.json();\n    })\n    .then((data) => {\n      console.log(\"overview data \", data);\n      dispatch({ type: types.IS_OVERVIEW_DATA_LOADING, payload: false });\n      dispatch({ type: types.FETCH_OVERVIEW_DATA_SUCCESSFULLY, payload: data });\n    })\n    .catch((err) => {\n      dispatch({ type: types.IS_OVERVIEW_DATA_LOADING, payload: false });\n      dispatch({ type: types.FETCH_OVERVIEW_DATA_FAILED, payload: {} });\n    });\n};\n\nexport const setOverviewDataLoading = (currentValue) => (dispatch) => {\n  dispatch({ type: types.IS_OVERVIEW_DATA_LOADING, payload: currentValue });\n};\n\nexport const saveOpenPositions = (openPositions) => (dispatch) => {\n  dispatch({ type: types.SAVE_OPEN_POSITIONS, payload: openPositions });\n};\n\nexport const resetOpenPositions = () => (dispatch) => {\n  dispatch({ type: types.RESET_OPEN_POSITIONS, payload: [] });\n};\n","const validateInput = (value) => {\n  const incorrectSigns = [\"/\", \"<\", \">\"];\n  const isValueIncorrect = incorrectSigns.some((el) => value.includes(el));\n  if (isValueIncorrect) {\n    return true;\n  }\n  if (!value) {\n    return true;\n  }\n  return false;\n};\n\nconst validateVolume = (value) => {\n  const regex = /^[0-9]{0,3}$/;\n  const isIncorrectValue = regex.test(value);\n\n  if (!isIncorrectValue) {\n    return true;\n  }\n  return false;\n};\n\nconst getGridCenteredProps = (width) => {\n  const gridCenteredProps = {\n    container: true,\n    item: true,\n    xs: width,\n    justify: \"center\",\n    alignItems: \"center\",\n  };\n  return gridCenteredProps;\n};\n\nconst utils = {\n  validateInput,\n  validateVolume,\n  getGridCenteredProps,\n};\n\nexport default utils;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ErrorComponent from \"../ErrorComponent/ErrorComponent\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport \"../../utils/customStyles.css\";\n\nconst cardStyle = {\n  width: \"100%\",\n  padding: \"10px\",\n  backgroundColor: \"#777\",\n  color: \"#FFF\",\n};\n\nconst StockList = ({\n  searchedData,\n  isSearchedDataFetchedSuccessfully,\n  filteredData,\n  showTransactionWindow,\n}) => {\n  const [isNoResult, setIsNoResult] = useState(false);\n\n  useEffect(() => {\n    if (!searchedData.length && isSearchedDataFetchedSuccessfully) {\n      return setIsNoResult(true);\n    }\n    if (searchedData.length && isSearchedDataFetchedSuccessfully) {\n      return setIsNoResult(false);\n    }\n  }, [searchedData, isSearchedDataFetchedSuccessfully]);\n\n  const renderNoResultMessage = () => {\n    if (isNoResult) {\n      return (\n        <Grid container item xs={12} justify=\"center\">\n          <div>No result found. Try again</div>\n        </Grid>\n      );\n    }\n  };\n\n  const renderDefaultMessage = () => {\n    if (!isNoResult && !filteredData.length) {\n      return (\n        <Grid container item xs={12} justify=\"center\">\n          <div>No stocks were searched yet</div>\n        </Grid>\n      );\n    }\n  };\n\n  const renderStockList = () => {\n    if (filteredData.length) {\n      const result = filteredData.map((el, i) => {\n        return (\n          <div key={`stock-list-element-${i}`} style={{ minWidth: \"100%\", marginBottom: \"20px\" }}>\n            <Button\n              style={{ padding: \"0\", minWidth: \"100%\" }}\n              onClick={() => showTransactionWindow(el)}\n            >\n              <Card style={cardStyle}>\n                <Grid item container xs={12} justify=\"space-between\">\n                  <div style={{ marginRight: \"25px\" }}>{el[\"1. symbol\"]}</div>\n                  <div style={{ textTransform: \"none\", textAlign: \"left\" }}>{el[\"2. name\"]}</div>\n                  <Grid item container xs={12} justify=\"flex-start\">\n                    <div>{el[\"4. region\"]}</div>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Button>\n          </div>\n        );\n      });\n      return result;\n    }\n  };\n\n  try {\n    return (\n      <Grid\n        container\n        item\n        xs={12}\n        justify=\"center\"\n        className={isNoResult || searchedData.length ? \"stock-list-wrapper\" : null}\n        style={{ marginTop: \"25px\" }}\n      >\n        {renderStockList()}\n        {renderNoResultMessage()}\n        {renderDefaultMessage()}\n      </Grid>\n    );\n  } catch (error) {\n    return <ErrorComponent message=\"Result stock list was crashed. Try refresh page\" />;\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    searchedData: state.searchedData,\n    isSearchedDataFetchedSuccessfully: state.isSearchedDataFetchedSuccessfully,\n  };\n};\n\nconst actions = null;\n\nexport default connect(mapStateToProps, actions)(StockList);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getSearchComponentData,\n  closeSearchDataNotification,\n  setSearchDataLoading,\n} from \"../../actions/actions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport utils from \"../../utils/utils\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ErrorComponent from \"../ErrorComponent/ErrorComponent\";\nimport StockList from \"../StockList/StockList\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport \"../../utils/customStyles.css\";\n\nconst SearchComponent = ({\n  getSearchComponentData,\n  isSearchDataLoading,\n  isSearchedDataFetchedSuccessfully,\n  isSearchedDataFetchedFailed,\n  closeSearchDataNotification,\n  setSearchDataLoading,\n  searchedData,\n  showTransactionWindow,\n}) => {\n  const [searchedPhrase, setSearchedPhrase] = useState(\"\");\n  const [stockInputError, setStockInputError] = useState(false);\n  const [market, setMarket] = useState(null);\n  const [marketOptions, setMarketOptions] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const textFieldDisabledCondition =\n    isSearchedDataFetchedSuccessfully || isSearchedDataFetchedFailed || isSearchDataLoading;\n  const searchButtonDisabled =\n    isSearchedDataFetchedSuccessfully ||\n    isSearchedDataFetchedFailed ||\n    isSearchDataLoading ||\n    !searchedPhrase ||\n    stockInputError;\n\n  const onKeyDown = (e) => {\n    if (e.keyCode === 13 && !searchButtonDisabled) {\n      e.preventDefault();\n      getSearchComponentData(searchedPhrase);\n      setSearchedPhrase(\"\");\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, [searchedPhrase]);\n\n  useEffect(() => {\n    setFilteredData([...searchedData]);\n  }, [searchedData]);\n\n  useEffect(() => {\n    if (isSearchedDataFetchedSuccessfully) {\n      const searchNotificationTimeout = setTimeout(() => {\n        closeSearchDataNotification(searchedData);\n      }, 5000);\n      return () => {\n        clearTimeout(searchNotificationTimeout);\n      };\n    }\n  }, [isSearchedDataFetchedSuccessfully]);\n\n  useEffect(() => {\n    // delete duplicate values:\n    if (searchedData.length) {\n      const duplicates = searchedData.map((el) => el[\"4. region\"]);\n      const distinctValues = new Set(duplicates);\n      setMarketOptions([...distinctValues]);\n    }\n  }, [searchedData]);\n\n  useEffect(() => {\n    const filterResult = searchedData.filter((el) => el[\"4. region\"] === market);\n    if (filterResult.length) {\n      return setFilteredData(filterResult);\n    }\n    return setFilteredData(searchedData);\n  }, [market]);\n\n  const handleSearchComponentChange = (e) => {\n    const isValueIncorrect = utils.validateInput(e.target.value);\n    setStockInputError(isValueIncorrect);\n    setSearchedPhrase(e.target.value);\n  };\n\n  const handleSearchClicked = () => {\n    getSearchComponentData(searchedPhrase);\n    setSearchedPhrase(\"\");\n  };\n\n  const handleSetMarket = (value) => {\n    if (value) {\n      return setMarket(value);\n    }\n    return setMarket(null);\n  };\n\n  const renderTransactionWindow = () => {\n    return (\n      <Snackbar\n        open={isSearchedDataFetchedSuccessfully || isSearchedDataFetchedFailed}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        onClose={() => closeSearchDataNotification(searchedData)}\n      >\n        <Alert\n          icon={false}\n          variant=\"filled\"\n          color={searchedData.length ? \"success\" : \"error\"}\n          elevation={6}\n          onClose={() => closeSearchDataNotification(searchedData)}\n        >\n          {searchedData.length ? \"Data was fetch successfully\" : \"No result found\"}\n        </Alert>\n      </Snackbar>\n    );\n  };\n\n  try {\n    return (\n      <>\n        <Grid container>\n          <Grid item xs={12}>\n            <h2 className=\"search-module-header\" style={{ textAlign: \"center\" }}>\n              Search company\n            </h2>\n          </Grid>\n          <Grid container item xs={12} justify=\"center\" alignItems=\"center\">\n            <TextField\n              id=\"company-input\"\n              label=\"Company name or symbol\"\n              variant=\"outlined\"\n              value={searchedPhrase}\n              disabled={textFieldDisabledCondition}\n              helperText={\n                stockInputError\n                  ? !searchedPhrase\n                    ? \"Empty value is not allowed\"\n                    : \"Incorrect value. Signs <, >, / are not allowed.\"\n                  : \"\"\n              }\n              error={stockInputError}\n              onChange={(e) => handleSearchComponentChange(e)}\n              style={{ width: \"300px\", transition: \"0.3s\" }}\n            />\n          </Grid>\n          <Grid container item xs={12} justify=\"center\" alignItems=\"center\">\n            <Button\n              variant=\"outlined\"\n              disabled={searchButtonDisabled}\n              style={{ margin: \"30px 0\", transition: \"0.3s\" }}\n              onClick={handleSearchClicked}\n            >\n              Search\n            </Button>\n          </Grid>\n          <Grid container item xs={12} justify=\"center\" alignItems=\"center\">\n            <Autocomplete\n              id=\"filter-by-market-input\"\n              value={market}\n              options={marketOptions}\n              getOptionLabel={(marketOption) => marketOption}\n              onChange={(event, newValue) => handleSetMarket(newValue)}\n              style={{ width: \"300px\" }}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  variant=\"outlined\"\n                  label=\"Filter result by market\"\n                  margin=\"normal\"\n                />\n              )}\n            />\n          </Grid>\n          <Grid container item xs={12} justify=\"center\" alignItems=\"center\">\n            {isSearchDataLoading ? (\n              <CircularProgress />\n            ) : (\n              <StockList\n                filteredData={filteredData}\n                showTransactionWindow={showTransactionWindow}\n              />\n            )}\n          </Grid>\n        </Grid>\n        {renderTransactionWindow()}\n      </>\n    );\n  } catch (error) {\n    return <ErrorComponent message=\"Search input was crashed. Try refresh page\" />;\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isSearchedDataFetchedSuccessfully: state.isSearchedDataFetchedSuccessfully,\n    isSearchedDataFetchedFailed: state.isSearchedDataFetchedFailed,\n    searchedData: state.searchedData,\n    isSearchDataLoading: state.isSearchDataLoading,\n  };\n};\n\nconst actions = {\n  getSearchComponentData,\n  closeSearchDataNotification,\n  setSearchDataLoading,\n};\n\nexport default connect(mapStateToProps, actions)(SearchComponent);\n","import { Grid, TextField } from \"@material-ui/core\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport utils from \"../../utils/utils\";\nimport ErrorComponent from \"../ErrorComponent/ErrorComponent\";\n\nconst cellStyle = {\n  border: \"1px solid black\",\n  borderRadius: \"5px\",\n};\n\nconst cellStyleInside = {\n  borderTop: \"1px solid black\",\n};\n\nconst counterBtnStyle = {\n  minWidth: \"0\",\n  width: \"100%\",\n};\n\nconst minorTextStyle = {\n  fontSize: \"12px\",\n};\n\nconst VolumeComponent = ({ volumeCounter, setVolumeCounter, volumeError, setVolumeError }) => {\n  const increaseVolume = () => {\n    if (volumeCounter) {\n      setVolumeCounter(++volumeCounter);\n      return setVolumeError(false);\n    }\n    setVolumeError(false);\n    return setVolumeCounter(1);\n  };\n\n  const decreaseVolume = () => {\n    if (volumeCounter > 1) {\n      setVolumeCounter(--volumeCounter);\n      return setVolumeError(false);\n    }\n    setVolumeError(false);\n    return setVolumeCounter(1);\n  };\n\n  const setVolume = (e) => {\n    const currentValue = e.target.value;\n    const result = utils.validateVolume(currentValue);\n\n    if (!currentValue) {\n      setVolumeCounter(currentValue);\n      return setVolumeError(true);\n    }\n    if (!result && currentValue !== \"0\" && currentValue) {\n      setVolumeCounter(currentValue);\n      return setVolumeError(false);\n    }\n  };\n\n  try {\n    return (\n      <Grid container style={cellStyle}>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item xs={12}>\n            <TextField\n              error={volumeError}\n              value={volumeCounter}\n              onChange={(e) => setVolume(e)}\n              inputProps={{ className: \"volume-input\" }}\n              style={{\n                backgroundColor: volumeError ? \"rgba(255,0,0,0.3)\" : \"#FFF\",\n                transition: \"0.3s\",\n              }}\n            >\n              {volumeCounter}\n            </TextField>\n          </Grid>\n          <Grid item xs={12} style={minorTextStyle}>\n            volume\n          </Grid>\n        </Grid>\n        <Grid container direction=\"row\">\n          <Grid item xs={6} style={cellStyleInside}>\n            <Button onClick={() => decreaseVolume(volumeCounter)} style={counterBtnStyle}>\n              -\n            </Button>\n          </Grid>\n          <Grid item xs={6} style={cellStyleInside}>\n            <Button onClick={() => increaseVolume(volumeCounter)} style={counterBtnStyle}>\n              +\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  } catch (error) {\n    return <ErrorComponent message=\"Volume input was crashed. Try again\" />;\n  }\n};\n\nexport default VolumeComponent;\n","import React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport ErrorComponent from \"../ErrorComponent/ErrorComponent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport utils from \"../../utils/utils\";\nimport { FixedSizeList } from \"react-window\";\n\nconst positionElementStyle = {\n  fontSize: \"14px\",\n  textAlign: \"left\",\n  fontWeight: \"500\",\n};\n\nconst PositionList = ({\n  showPositionInfo,\n  allOpenPositionsFiltered,\n  saveOpenPositions,\n  allOpenPositions,\n}) => {\n  const maxPositionsOnPage = 4;\n\n  const handleCheckPosition = (e) => {\n    const currentClickedIndex = parseInt(e.target.name);\n    const positionToCompareIndex = allOpenPositionsFiltered.findIndex(\n      (el) => el[\"isChecked\"] === true\n    );\n\n    // disable checkbox for all positions:\n    const result = allOpenPositions.map((el) => {\n      el.isChecked = false;\n      return el;\n    });\n    // if was clicked the same checkbox again:\n    if (currentClickedIndex === positionToCompareIndex) {\n      return saveOpenPositions([...result]);\n    }\n    // enable checkbox for specific position:\n    result[currentClickedIndex][\"isChecked\"] = true;\n    saveOpenPositions([...result]);\n  };\n\n  const renderPositionListHeader = () => {\n    return (\n      <Grid\n        container\n        justify=\"flex-start\"\n        style={{\n          margin: showPositionInfo ? \"15px 0 0 0\" : \"0\",\n          height: showPositionInfo ? \"39px\" : \"0\",\n          fontWeight: \"700\",\n          transition: \"0.3s\",\n        }}\n      >\n        Open Positions:\n      </Grid>\n    );\n  };\n\n  const renderRows = () => {\n    const res = allOpenPositionsFiltered.map((el, i) => {\n      return (\n        <Grid\n          {...utils.getGridCenteredProps(12)}\n          style={positionElementStyle}\n          key={`position-element-${i}`}\n        >\n          <Grid item xs={2}>\n            <Checkbox\n              icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n              checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n              color=\"default\"\n              onChange={(e) => handleCheckPosition(e)}\n              checked={allOpenPositionsFiltered[i][\"isChecked\"]}\n              name={`${i}`}\n            />\n          </Grid>\n          <Grid item xs={5}>\n            {el.symbol}\n          </Grid>\n          <Grid item xs={2}>\n            {el.volume}\n          </Grid>\n          <Grid item xs={3}>\n            {el.price}\n          </Grid>\n        </Grid>\n      );\n    });\n    return res;\n  };\n\n  const renderSwipeableList = () => {\n    const elHeight = 38;\n    const currentSize =\n      allOpenPositionsFiltered.length < maxPositionsOnPage\n        ? allOpenPositionsFiltered.length * elHeight\n        : 152;\n    return (\n      <FixedSizeList\n        height={showPositionInfo ? currentSize : 0}\n        itemSize={allOpenPositionsFiltered.length}\n        itemCount={1}\n        style={{ width: \"100%\" }}\n      >\n        {renderRows}\n      </FixedSizeList>\n    );\n  };\n\n  try {\n    return (\n      <Grid\n        container\n        justify=\"flex-start\"\n        style={{\n          transition: \"0.3s\",\n          minHeight: showPositionInfo ? \"100px\" : \"0\",\n          opacity: showPositionInfo ? \"1\" : \"0\",\n        }}\n      >\n        {renderPositionListHeader()}\n        {renderSwipeableList()}\n      </Grid>\n    );\n  } catch (error) {\n    return <ErrorComponent message=\"Position list was crashed. Try again\" />;\n  }\n};\n\nexport default PositionList;\n","import Button from \"@material-ui/core/Button\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getTimeSeriesDailyAdjusted,\n  getOverview,\n  getGlobalQuoteCompany,\n  setOverviewDataLoading,\n  saveOpenPositions,\n  resetOpenPositions,\n} from \"../../actions/actions\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport InfoOutlined from \"@material-ui/icons/InfoOutlined\";\nimport Grid from \"@material-ui/core/Grid\";\nimport VolumeComponent from \"../VolumeComponent/VolumeComponent\";\nimport ErrorComponent from \"../ErrorComponent/ErrorComponent\";\nimport \"../../utils/customStyles.css\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport PositionList from \"../PositionList/PositionList\";\nimport utils from \"../../utils/utils\";\n\nconst CustomButton = withStyles({\n  root: {\n    minWidth: \"110px\",\n    color: \"#FFF !important\",\n    fontWeight: \"700\",\n    padding: \"20px 10px\",\n    fontSize: \"16px\",\n    display: \"flex\",\n    width: \"100%\",\n    flexDirection: \"row\",\n    transition: \"0.3s\",\n    \"& div:nth-child(2)\": {\n      fontSize: \"12px\",\n      fontWeight: \"500\",\n      textTransform: \"none\",\n      transition: \"0.3s\",\n    },\n    \"@media(min-width: 400px)\": {\n      minWidth: \"140px\",\n      padding: \"12px 10px\",\n      fontSize: \"20px\",\n      \"& div:nth-child(2)\": {\n        fontSize: \"16px\",\n      },\n    },\n  },\n})(Button);\n\nconst getTextAreaAutosizeStyle = (condition) => {\n  const textAreaAutosizeStyle = {\n    width: \"300px\",\n    minWidth: \"250px\",\n    minHeight: \"80px\",\n    maxWidth: \"300px\",\n    maxHeight: \"80px\",\n    transition: \"0.3s\",\n    height: condition ? \"80px\" : \"0\",\n    opacity: condition ? \"1\" : \"0\",\n  };\n  return textAreaAutosizeStyle;\n};\n\nconst getSellErrorMessageStyle = (condition) => {\n  const sellErrorMessageStyle = {\n    height: condition ? \"24px\" : \"0\",\n    marginTop: condition ? \"15px\" : \"0\",\n    transition: \"0.3s\",\n    fontWeight: \"600\",\n    color: \"#F00\",\n  };\n  return sellErrorMessageStyle;\n};\n\nconst TransactionCard = ({\n  companySymbol,\n  getOverview,\n  overviewData,\n  title,\n  isTimeSeriesDailyAdjustedFetchedSuccessfully,\n  isTimeSeriesDailyAdjustedFetchedFailed,\n  timesSeriesDailyAdjusted,\n  getTimeSeriesDailyAdjusted,\n  getGlobalQuoteCompany,\n  isGlobalQuoteFetchSuccessfully,\n  isGlobalQuoteFetchFailed,\n  globalQuote,\n  isOverviewDataFetchedSuccessfully,\n  setOverviewDataLoading,\n  isOverviewDataLoading,\n  saveOpenPositions,\n  allOpenPositions,\n}) => {\n  const [isDescriptionVisible, setIsDescriptionVisible] = useState(false);\n  let [volumeCounter, setVolumeCounter] = useState(1);\n  const [volumeError, setVolumeError] = useState(false);\n  const [apiError, setApiError] = useState(false);\n  const [sellErrorMessage, setSellErrorMessage] = useState(\"\");\n  const [showPositionInfo, setShowPositionInfo] = useState(allOpenPositions.length ? true : false);\n  const disabledButton = !isGlobalQuoteFetchSuccessfully || volumeError || apiError;\n  const [allOpenPositionsFiltered, setAllOpenPositionsFiltered] = useState([]);\n\n  useEffect(() => {\n    // getTimeSeriesDailyAdjusted(companySymbol);\n    getGlobalQuoteCompany(companySymbol);\n  }, [companySymbol]);\n\n  useEffect(() => {\n    const filteredPositions = allOpenPositions.filter(({ symbol }) => symbol === companySymbol);\n    setAllOpenPositionsFiltered(filteredPositions);\n  }, [allOpenPositions]);\n\n  useEffect(() => {\n    if (globalQuote[\"Note\"] || overviewData[\"Note\"]) {\n      return setApiError(true);\n    }\n    return setApiError(false);\n  }, [globalQuote, overviewData]);\n\n  useEffect(() => {\n    if (allOpenPositionsFiltered.length) {\n      return setShowPositionInfo(true);\n    }\n    return setShowPositionInfo(false);\n  }, [allOpenPositionsFiltered]);\n\n  useEffect(() => {\n    if (sellErrorMessage) {\n      const sellErrorMessageTimeout = setTimeout(() => {\n        setSellErrorMessage(\"\");\n      }, 5000);\n      return () => {\n        clearTimeout(sellErrorMessageTimeout);\n      };\n    }\n  }, [sellErrorMessage]);\n\n  const toggleShowDescription = () => {\n    if (companySymbol !== overviewData[\"Symbol\"]) {\n      getOverview(companySymbol);\n    }\n    setIsDescriptionVisible(!isDescriptionVisible);\n  };\n\n  const calculateSellPrice = (price) => {\n    if (price) {\n      const priceNumber = parseFloat(price);\n      const result = (priceNumber - 0.1).toFixed(4);\n      return result;\n    }\n  };\n\n  const handleOpenPosition = (price) => {\n    const parsedPrice = parseFloat(price);\n    saveOpenPositions([\n      ...allOpenPositions,\n      {\n        symbol: companySymbol,\n        price: parsedPrice,\n        volume: volumeCounter,\n        isChecked: false,\n      },\n    ]);\n  };\n\n  const handleClosePosition = (price) => {\n    const checkedPositionIndex = allOpenPositionsFiltered.findIndex(\n      ({ isChecked }) => isChecked === true\n    );\n    const checkedPosition = allOpenPositionsFiltered[checkedPositionIndex];\n    if (!allOpenPositionsFiltered.length) {\n      return setSellErrorMessage(\"No stocks to sell\");\n    }\n\n    if (checkedPositionIndex === -1) {\n      return setSellErrorMessage(\"No position checked\");\n    }\n\n    if (checkedPosition.symbol !== companySymbol) {\n      return setSellErrorMessage(\"Invalid position checked\");\n    }\n\n    if (checkedPosition[\"volume\"] < volumeCounter) {\n      return setSellErrorMessage(\"Not enough stocks to sell\");\n    }\n\n    // reset error message:\n    setSellErrorMessage(\"\");\n    // subtract volume from picked position:\n    const mappedResult = allOpenPositionsFiltered.map((el) => {\n      if (el.isChecked) {\n        checkedPosition[\"volume\"] -= volumeCounter;\n        return checkedPosition;\n      }\n      return el;\n    });\n    // delete positions which current volume is zero:\n    if (!checkedPosition[\"volume\"]) {\n      const filteredPositions = allOpenPositions.filter(({ volume }) => volume !== 0);\n      return saveOpenPositions([...filteredPositions]);\n    }\n    return saveOpenPositions([...mappedResult]);\n  };\n\n  const renderCardHeader = () => {\n    return (\n      <Grid {...utils.getGridCenteredProps(12)} style={{ marginBottom: \"20px\" }}>\n        <h2 className=\"transaction-card-header\" style={{ fontWeight: \"500\", margin: \"0\" }}>\n          {title}\n        </h2>\n        <Button onClick={toggleShowDescription} disabled={apiError}>\n          <InfoOutlined style={{ color: \"#2196f3\" }} />\n        </Button>\n      </Grid>\n    );\n  };\n\n  const renderTextArea = () => {\n    return (\n      <Grid\n        {...utils.getGridCenteredProps(12)}\n        style={{\n          height: isDescriptionVisible ? \"80px\" : \"0\",\n          transition: \"0.3s\",\n        }}\n      >\n        {isOverviewDataLoading ? (\n          <CircularProgress />\n        ) : (\n          <TextareaAutosize\n            rowsMax={5}\n            value={\n              isOverviewDataFetchedSuccessfully\n                ? overviewData[\"Description\"]\n                : \"This API is limited. Try again in one minute.\"\n            }\n            style={getTextAreaAutosizeStyle(isDescriptionVisible)}\n          />\n        )}\n      </Grid>\n    );\n  };\n\n  const renderApiWarning = () => {\n    return (\n      <>\n        {apiError ? (\n          <Grid container justify=\"center\">\n            <div style={{ margin: \"20px 0\" }}>This API is limited. Try again in one minute.</div>\n          </Grid>\n        ) : null}\n      </>\n    );\n  };\n\n  const renderSellButton = () => {\n    return (\n      <Grid {...utils.getGridCenteredProps(4)}>\n        <CustomButton\n          disabled={disabledButton}\n          style={{ backgroundColor: disabledButton ? \"#777\" : \"#F00\" }}\n          onClick={() => handleClosePosition()}\n        >\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12}>\n              sell\n            </Grid>\n            <Grid item xs={12}>\n              {!isGlobalQuoteFetchSuccessfully\n                ? \"Loading...\"\n                : globalQuote[\"Note\"]\n                ? \"---\"\n                : calculateSellPrice(globalQuote[\"Global Quote\"][\"05. price\"])}\n            </Grid>\n          </Grid>\n        </CustomButton>\n      </Grid>\n    );\n  };\n\n  const renderVolumeComponent = () => {\n    return (\n      <Grid {...utils.getGridCenteredProps(3)}>\n        <VolumeComponent\n          volumeCounter={volumeCounter}\n          setVolumeCounter={setVolumeCounter}\n          volumeError={volumeError}\n          setVolumeError={setVolumeError}\n        />\n      </Grid>\n    );\n  };\n\n  const renderBuyButton = () => {\n    return (\n      <Grid {...utils.getGridCenteredProps(4)}>\n        <CustomButton\n          style={{ backgroundColor: disabledButton ? \"#777\" : \"#32c972\" }}\n          disabled={disabledButton}\n          onClick={() => handleOpenPosition(globalQuote[\"Global Quote\"][\"05. price\"])}\n        >\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12}>\n              buy\n            </Grid>\n            <Grid item xs={12}>\n              {!isGlobalQuoteFetchSuccessfully\n                ? \"Loading...\"\n                : globalQuote[\"Note\"]\n                ? \"---\"\n                : globalQuote[\"Global Quote\"][\"05. price\"]}\n            </Grid>\n          </Grid>\n        </CustomButton>\n      </Grid>\n    );\n  };\n\n  const renderSellErrorMessage = () => {\n    return (\n      <Grid\n        {...utils.getGridCenteredProps(12)}\n        style={getSellErrorMessageStyle(sellErrorMessage.length)}\n      >\n        {sellErrorMessage}\n      </Grid>\n    );\n  };\n\n  try {\n    return (\n      <Grid container>\n        {renderCardHeader()}\n        {renderTextArea()}\n        {renderApiWarning()}\n        <Grid container justify=\"space-between\" alignItems=\"center\" style={{ marginTop: \"20px\" }}>\n          {renderSellButton()}\n          {renderVolumeComponent()}\n          {renderBuyButton()}\n        </Grid>\n        {renderSellErrorMessage()}\n        <PositionList\n          showPositionInfo={showPositionInfo}\n          allOpenPositionsFiltered={allOpenPositionsFiltered}\n          saveOpenPositions={saveOpenPositions}\n          allOpenPositions={allOpenPositions}\n        />\n      </Grid>\n    );\n  } catch (error) {\n    return <ErrorComponent message=\"Transaction card was crashed. Try again\" />;\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isTimeSeriesDailyAdjustedFetchedSuccessfully:\n      state.isTimeSeriesDailyAdjustedFetchedSuccessfully,\n    isTimeSeriesDailyAdjustedFetchedFailed: state.isTimeSeriesDailyAdjustedFetchedFailed,\n    timesSeriesDailyAdjusted: state.timesSeriesDailyAdjusted,\n    overviewData: state.overviewData,\n    globalQuote: state.globalQuote,\n    isGlobalQuoteFetchSuccessfully: state.isGlobalQuoteFetchSuccessfully,\n    isGlobalQuoteFetchFailed: state.isGlobalQuoteFetchFailed,\n    isOverviewDataFetchedSuccessfully: state.isOverviewDataFetchedSuccessfully,\n    isOverviewDataLoading: state.isOverviewDataLoading,\n    allOpenPositions: state.allOpenPositions,\n  };\n};\n\nconst actions = {\n  getTimeSeriesDailyAdjusted,\n  getOverview,\n  getGlobalQuoteCompany,\n  setOverviewDataLoading,\n  saveOpenPositions,\n  resetOpenPositions,\n};\n\nexport default connect(mapStateToProps, actions)(TransactionCard);\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport { connect } from \"react-redux\";\nimport ErrorComponent from \"../ErrorComponent/ErrorComponent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link } from \"react-router-dom\";\nimport SearchComponent from \"../SearchComponent/SearchComponent\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport TransactionCard from \"../TransactionCard/TransactionCard\";\nimport { resetOpenPositions } from \"../../actions/actions\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport utils from \"../../utils/utils\";\n\nconst wrapperStyle = {\n  padding: \"20px\",\n  backgroundColor: \"#BBB\",\n  boxSizing: \"border-box\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  flexGrow: \"1\",\n};\n\nconst cardStyle = {\n  marginBottom: \"25px\",\n  opacity: \"0\",\n  maxWidth: \"500px\",\n  width: \"100%\",\n};\n\nconst searchModuleStyle = {\n  padding: \"0 20px 40px 20px\",\n  opacity: \"0\",\n  maxWidth: \"500px\",\n  boxSizing: \"border-box\",\n  width: \"100%\",\n};\n\nconst Dashboard = ({ resetOpenPositions }) => {\n  const [transactionWindow, setTransactionWindow] = useState(null);\n\n  useEffect(() => {\n    resetOpenPositions();\n  }, []);\n\n  const showTransactionWindow = (company) => {\n    const companySymbol = company[\"1. symbol\"];\n    setTransactionWindow(\n      <SweetAlert\n        title=\"\"\n        onConfirm={() => setTransactionWindow(null)}\n        onCancel={() => setTransactionWindow(null)}\n        showConfirm={false}\n        style={{ margin: \"0 !important\" }}\n      >\n        <TransactionCard\n          companySymbol={companySymbol}\n          title={`${company[\"1. symbol\"]}, ${company[\"2. name\"]}`}\n        />\n      </SweetAlert>\n    );\n  };\n\n  try {\n    return (\n      <div style={wrapperStyle}>\n        {transactionWindow}\n        <Grid container style={{ maxWidth: \"500px\" }}>\n          <Link to=\"/stock-app\" style={{ textDecoration: \"none\" }}>\n            <Button style={{ fontSize: \"16px\", fontWeight: \"700\" }}>\n              <ArrowBack />\n              Back\n            </Button>\n          </Link>\n        </Grid>\n        <Card className=\"app-header\" style={cardStyle}>\n          <Grid container>\n            <Grid {...utils.getGridCenteredProps(12)}>\n              <h1 style={{ textAlign: \"center\" }}>Stock App</h1>\n            </Grid>\n          </Grid>\n        </Card>\n        <Card className=\"search-module-card\" style={searchModuleStyle}>\n          <Grid container>\n            <SearchComponent showTransactionWindow={showTransactionWindow} />\n          </Grid>\n        </Card>\n      </div>\n    );\n  } catch (error) {\n    return <ErrorComponent message=\"Dashboard was crashed. Try refresh page\" />;\n  }\n};\n\nconst actions = {\n  resetOpenPositions,\n};\n\nexport default connect(null, actions)(Dashboard);\n","import React from \"react\";\nimport \"../../utils/customStyles.css\";\n\nconst footerStyle = {\n  boxSizing: \"border-box\",\n  padding: \"10px 20px\",\n  textAlign: \"right\",\n  color: \"#eee\",\n  backgroundColor: \"#4D4D4D\",\n  fontWeight: \"500\",\n};\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\" style={footerStyle}>\n      <div style={{ margin: \"0\", opacity: \"0\" }}>Created by Marek Szczegodziński 2021</div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport ErrorComponent from \"../ErrorComponent/ErrorComponent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport utils from \"../../utils/utils\";\nimport \"../../utils/customStyles.css\";\n\nconst wrapperStyle = {\n  padding: \"40px\",\n  backgroundColor: \"#BBB\",\n  boxSizing: \"border-box\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  flexGrow: \"1\",\n  textAlign: \"center\",\n};\n\nconst cardStyle = {\n  margin: \"20px\",\n  padding: \"20px\",\n  opacity: \"0\",\n  maxWidth: \"500px\",\n  width: \"100%\",\n};\n\nconst HomePage = () => {\n  try {\n    return (\n      <div style={wrapperStyle}>\n        <Card className=\"welcome-card\" style={cardStyle}>\n          <h1 style={{ margin: \"0\" }}>Welcome in Stock App</h1>\n          <Grid {...utils.getGridCenteredProps(12)} style={{ margin: \"25px 0\" }}>\n            <Typography>Stock App is a simple demo app which can use you to trade.</Typography>\n            <Typography>Have a good time!</Typography>\n          </Grid>\n          <Grid {...utils.getGridCenteredProps(12)} style={{ margin: \"25px 0 10px 0\" }}>\n            <Button variant=\"outlined\">\n              <Link\n                to=\"/stock-app/dashboard\"\n                style={{\n                  textDecoration: \"none\",\n                  color: \"#333\",\n                  fontWeight: \"700\",\n                  fontSize: \"20px\",\n                }}\n              >\n                go to app\n              </Link>\n            </Button>\n          </Grid>\n        </Card>\n      </div>\n    );\n  } catch (error) {\n    return <ErrorComponent message=\"Home page was crashed. Try refresh page or come back soon\" />;\n  }\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport Footer from \"./components/Footer/Footer\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport HomePage from \"./components/HomePage/HomePage\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/stock-app/dashboard\">\n            <div\n              className=\"App\"\n              style={{ height: \"100vh\", display: \"flex\", flexDirection: \"column\" }}\n            >\n              <Dashboard />\n              <Footer />\n            </div>\n          </Route>\n          <Route path=\"/stock-app\">\n            <div\n              className=\"App\"\n              style={{ height: \"100vh\", display: \"flex\", flexDirection: \"column\" }}\n            >\n              <HomePage />\n              <Footer />\n            </div>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import types from \"../types\";\n\nconst initialState = {\n  isTimeSeriesDailyAdjustedFetchedSuccessfully: false,\n  isTimeSeriesDailyAdjustedFetchedFailed: false,\n  timesSeriesDailyAdjusted: {},\n  isSearchedDataFetchedSuccessfully: false,\n  isSearchedDataFetchedFailed: false,\n  searchedData: [],\n  isSearchDataLoading: false,\n  isIntradayDataLoading: false,\n  isDailyAdjustedDataLoading: false,\n  isOverviewDataFetchedSuccessfully: false,\n  isOverviewDataFetchedFailed: false,\n  isOverviewDataLoading: false,\n  overviewData: {},\n  isGlobalQuoteFetchSuccessfully: false,\n  isGlobalQuoteFetchFailed: false,\n  globalQuote: {},\n  allOpenPositions: [],\n};\n\nconst dashboardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.FETCH_OVERVIEW_DATA_SUCCESSFULLY:\n      return {\n        ...state,\n        isOverviewDataFetchedSuccessfully: true,\n        isOverviewDataFetchedFailed: false,\n        overviewData: action.payload,\n      };\n    case types.FETCH_OVERVIEW_DATA_FAILED:\n      return {\n        ...state,\n        isOverviewDataFetchedSuccessfully: false,\n        isOverviewDataFetchedFailed: true,\n        overviewData: action.payload,\n      };\n    case types.FETCH_TIME_SERIES_DAILY_ADJUSTED_SUCCESSFULLY:\n      return {\n        ...state,\n        isTimeSeriesDailyAdjustedFetchedSuccessfully: true,\n        isTimeSeriesDailyAdjustedFetchedFailed: false,\n        timesSeriesDailyAdjusted: action.payload,\n      };\n    case types.FETCH_TIME_SERIES_DAILY_ADJUSTED_FAILED:\n      return {\n        ...state,\n        isTimeSeriesDailyAdjustedFetchedSuccessfully: false,\n        isTimeSeriesDailyAdjustedFetchedFailed: true,\n        timesSeriesDailyAdjusted: {},\n      };\n    case types.FETCH_SEARCH_ENDPOINT_DATA:\n      return {\n        ...state,\n        searchedData: action.payload,\n        isSearchedDataFetchedSuccessfully: action.isSearchedDataFetchedSuccessfully,\n        isSearchedDataFetchedFailed: action.isSearchedDataFetchedFailed,\n      };\n    case types.IS_SEARCH_DATA_LOADING:\n      return {\n        ...state,\n        isSearchDataLoading: action.payload,\n      };\n    case types.FETCH_GLOBAL_QUOTE_SUCCESSFULLY:\n      return {\n        ...state,\n        isGlobalQuoteFetchSuccessfully: true,\n        isGlobalQuoteFetchFailed: false,\n        globalQuote: action.payload,\n      };\n    case types.FETCH_GLOBAL_QUOTE_FAILED:\n      return {\n        ...state,\n        isGlobalQuoteFetchSuccessfully: false,\n        isGlobalQuoteFetchFailed: true,\n        globalQuote: {},\n      };\n    case types.RESET_GLOBAL_QUOTE:\n      return {\n        ...state,\n        isGlobalQuoteFetchSuccessfully: false,\n        isGlobalQuoteFetchFailed: false,\n        globalQuote: {},\n      };\n    case types.IS_OVERVIEW_DATA_LOADING: {\n      return {\n        ...state,\n        isOverviewDataLoading: action.payload,\n      };\n    }\n    case types.SAVE_OPEN_POSITIONS: {\n      return {\n        ...state,\n        allOpenPositions: [...action.payload],\n      };\n    }\n    case types.RESET_OPEN_POSITIONS: {\n      return {\n        ...state,\n        allOpenPositions: [],\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default dashboardReducer;\n","import dashboardReducer from './reducers/dashboardReducer';\nimport { applyMiddleware, createStore } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(\n  dashboardReducer,\n  composeWithDevTools(applyMiddleware(thunk, logger))\n)\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}