{"version":3,"sources":["components/ErrorComponent/ErrorComponent.js","types.js","actions/actions.js","utils/utils.js","components/StockList/StockList.js","components/SearchComponent/SearchComponent.js","components/VolumeComponent/VolumeComponent.js","components/PositionList/PositionList.js","components/TransactionCard/TransactionCard.js","components/Dashboard/Dashboard.js","components/Footer/Footer.js","App.js","reducers/dashboardReducer.js","store.js","index.js"],"names":["ErrorComponent","message","Grid","item","xs","sm","md","lg","style","textAlign","marginBottom","types","FETCH_TIME_SERIES_DAILY_ADJUSTED_SUCCESSFULLY","FETCH_TIME_SERIES_DAILY_ADJUSTED_FAILED","FETCH_SEARCH_ENDPOINT_DATA","IS_SEARCH_DATA_LOADING","FETCH_OVERVIEW_DATA_SUCCESSFULLY","FETCH_OVERVIEW_DATA_FAILED","FETCH_GLOBAL_QUOTE_FAILED","FETCH_GLOBAL_QUOTE_SUCCESSFULLY","RESET_GLOBAL_QUOTE","IS_OVERVIEW_DATA_LOADING","fetchUrl","key","process","REACT_APP_KEY","resetGlobalQuoteCompany","dispatch","type","utils","validateInput","value","some","el","includes","validateVolume","test","getGridCenteredProps","width","container","justify","alignItems","cardStyle","padding","backgroundColor","color","connect","state","searchedData","isSearchedDataFetchedSuccessfully","filteredData","showTransactionWindow","useState","isNoResult","setIsNoResult","useEffect","length","className","marginTop","map","i","minWidth","Button","onClick","Card","marginRight","textTransform","renderStockList","renderNoResultMessage","renderDefaultMessage","error","actions","getSearchComponentData","searchedPhrase","payload","fetch","method","headers","Accept","then","resp","json","data","isSearchedDataFetchedFailed","bestMatches","catch","err","closeSearchDataNotification","setSearchDataLoading","currentValue","isSearchDataLoading","setSearchedPhrase","stockInputError","setStockInputError","market","setMarket","marketOptions","setMarketOptions","setFilteredData","searchNotificationTimeout","setTimeout","clearTimeout","duplicates","distinctValues","Set","filterResult","filter","TextField","id","label","variant","disabled","helperText","onChange","e","isValueIncorrect","target","handleSearchComponentChange","transition","margin","Autocomplete","options","getOptionLabel","marketOption","event","newValue","renderInput","params","CircularProgress","Snackbar","open","anchorOrigin","vertical","horizontal","onClose","Alert","icon","elevation","cellStyle","border","borderRadius","cellStyleInside","borderTop","counterBtnStyle","minorTextStyle","fontSize","VolumeComponent","volumeCounter","setVolumeCounter","volumeError","setVolumeError","result","setVolume","inputProps","direction","positionElementStyle","fontWeight","PositionList","openPositions","showPositionInfo","setOpenPositions","currentPage","setCurrentPage","pages","setPages","pagesQuantity","Math","floor","handleChangePage","minHeight","opacity","height","minRange","maxRange","Checkbox","checkedIcon","currentClickedIndex","parseInt","name","positionToCompareIndex","findIndex","isChecked","handleCheckPosition","checked","symbol","volume","price","renderPositionList","Pagination","count","page","CustomButton","withStyles","root","display","flexDirection","getTimeSeriesDailyAdjusted","getOverview","console","log","getGlobalQuoteCompany","setOverviewDataLoading","isTimeSeriesDailyAdjustedFetchedSuccessfully","isTimeSeriesDailyAdjustedFetchedFailed","timesSeriesDailyAdjusted","overviewData","globalQuote","isGlobalQuoteFetchSuccessfully","isGlobalQuoteFetchFailed","isOverviewDataFetchedSuccessfully","isOverviewDataLoading","companySymbol","title","isDescriptionVisible","setIsDescriptionVisible","apiError","setApiError","sellErrorMessage","setSellErrorMessage","setShowPositionInfo","disabledButton","sellErrorMessageTimeout","toggleShowDescription","TextareaAutosize","rowsMax","condition","maxWidth","maxHeight","renderTextArea","checkedPositionIndex","checkedPosition","mappedResult","filteredPositions","handleClosePosition","parseFloat","toFixed","calculateSellPrice","parsedPrice","handleOpenPosition","renderSellErrorMessage","wrapperStyle","boxSizing","searchModuleStyle","Dashboard","transactionWindow","setTransactionWindow","company","onConfirm","onCancel","showConfirm","footerStyle","lineHeight","Footer","App","initialState","isIntradayDataLoading","isDailyAdjustedDataLoading","isOverviewDataFetchedFailed","dashboardReducer","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d52a2db5.chunk.js","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\n\nconst ErrorComponent = ({ message }) => {\n  return (\n    <Grid item xs={12} sm={12} md={12} lg={12}>\n      <h3 style={{ textAlign: \"center\", marginBottom: \"30px\" }}>{message}</h3>\n    </Grid>\n  );\n};\n\nexport default ErrorComponent;\n","const IS_OVERVIEW_DATA_LOADING = \"IS_OVERVIEW_DATA_LOADING\";\nconst IS_SEARCH_DATA_LOADING = \"IS_SEARCH_DATA_LOADING\";\nconst FETCH_GLOBAL_QUOTE_FAILED = \"FETCH_GLOBAL_QUOTE_FAILED\";\nconst FETCH_GLOBAL_QUOTE_SUCCESSFULLY = \"FETCH_GLOBAL_QUOTE_SUCCESSFULLY\";\nconst FETCH_OVERVIEW_DATA_SUCCESSFULLY = \"FETCH_OVERVIEW_DATA_SUCCESSFULLY\";\nconst FETCH_OVERVIEW_DATA_FAILED = \"FETCH_OVERVIEW_DATA_FAILED\";\nconst FETCH_SEARCH_ENDPOINT_DATA = \"FETCH_SEARCH_ENDPOINT_DATA\";\nconst FETCH_TIME_SERIES_DAILY_ADJUSTED_SUCCESSFULLY =\n  \"FETCH_TIME_SERIES_DAILY_ADJUSTED_SUCCESSFULLY\";\nconst FETCH_TIME_SERIES_DAILY_ADJUSTED_FAILED = \"FETCH_TIME_SERIES_DAILY_ADJUSTED_FAILED\";\nconst RESET_GLOBAL_QUOTE = \"RESET_GLOBAL_QUOTE\";\n\nconst types = {\n  FETCH_TIME_SERIES_DAILY_ADJUSTED_SUCCESSFULLY,\n  FETCH_TIME_SERIES_DAILY_ADJUSTED_FAILED,\n  FETCH_SEARCH_ENDPOINT_DATA,\n  IS_SEARCH_DATA_LOADING,\n  FETCH_OVERVIEW_DATA_SUCCESSFULLY,\n  FETCH_OVERVIEW_DATA_FAILED,\n  FETCH_GLOBAL_QUOTE_FAILED,\n  FETCH_GLOBAL_QUOTE_SUCCESSFULLY,\n  RESET_GLOBAL_QUOTE,\n  IS_OVERVIEW_DATA_LOADING,\n};\nexport default types;\n","import types from \"../types\";\n\nconst fetchUrl = \"https://www.alphavantage.co/query?function=\";\nconst key = process.env.REACT_APP_KEY;\n\nexport const getTimeSeriesDailyAdjusted = (symbol) => (dispatch) => {\n  fetch(`${fetchUrl}TIME_SERIES_DAILY_ADJUSTED&symbol=${symbol}&apikey=${key}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((resp) => {\n      return resp.json();\n    })\n    .then((data) => {\n      // console.log(\"time series daily adjusted \", data);\n      dispatch({\n        type: types.FETCH_TIME_SERIES_DAILY_ADJUSTED_SUCCESSFULLY,\n        payload: data,\n      });\n    })\n    .catch((err) => {\n      dispatch({ type: types.FETCH_TIME_SERIES_DAILY_ADJUSTED_FAILED });\n    });\n};\n\nexport const getGlobalQuoteCompany = (symbol) => (dispatch) => {\n  resetGlobalQuoteCompany();\n  fetch(`${fetchUrl}GLOBAL_QUOTE&symbol=${symbol}&apikey=${key}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((resp) => {\n      return resp.json();\n    })\n    .then((data) => {\n      // console.log(\"global quote \", data);\n      dispatch({\n        type: types.FETCH_GLOBAL_QUOTE_SUCCESSFULLY,\n        payload: data,\n      });\n    })\n    .catch((err) => {\n      dispatch({ type: types.FETCH_GLOBAL_QUOTE_FAILED });\n    });\n};\n\nexport const resetGlobalQuoteCompany = () => (dispatch) => {\n  dispatch({ type: types.RESET_GLOBAL_QUOTE });\n};\n\nexport const getSearchComponentData = (searchedPhrase) => (dispatch) => {\n  dispatch({ type: types.IS_SEARCH_DATA_LOADING, payload: true });\n  fetch(`${fetchUrl}SYMBOL_SEARCH&keywords=${searchedPhrase}&apikey=${key}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((resp) => {\n      return resp.json();\n    })\n    .then((data) => {\n      dispatch({ type: types.IS_SEARCH_DATA_LOADING, payload: false });\n      dispatch({\n        type: types.FETCH_SEARCH_ENDPOINT_DATA,\n        isSearchedDataFetchedSuccessfully: true,\n        isSearchedDataFetchedFailed: false,\n        payload: data.bestMatches,\n      });\n    })\n    .catch((err) => {\n      dispatch({ type: types.IS_SEARCH_DATA_LOADING, payload: false });\n      dispatch({\n        type: types.FETCH_SEARCH_ENDPOINT_DATA,\n        isSearchedDataFetchedSuccessfully: false,\n        isSearchedDataFetchedFailed: true,\n        payload: [],\n      });\n    });\n};\n\nexport const closeSearchDataNotification = (searchedData) => (dispatch) => {\n  dispatch({\n    type: types.FETCH_SEARCH_ENDPOINT_DATA,\n    payload: searchedData,\n    isSearchedDataFetchedSuccessfully: false,\n    isSearchedDataFetchedFailed: false,\n  });\n};\n\nexport const setSearchDataLoading = (currentValue) => (dispatch) => {\n  dispatch({ type: types.IS_SEARCH_DATA_LOADING, payload: currentValue });\n};\n\nexport const getOverview = (symbol) => (dispatch) => {\n  dispatch({ type: types.IS_OVERVIEW_DATA_LOADING, payload: true });\n  fetch(`${fetchUrl}OVERVIEW&symbol=${symbol}&apikey=${key}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((resp) => {\n      return resp.json();\n    })\n    .then((data) => {\n      console.log(\"overview data \", data);\n      dispatch({ type: types.IS_OVERVIEW_DATA_LOADING, payload: false });\n      dispatch({ type: types.FETCH_OVERVIEW_DATA_SUCCESSFULLY, payload: data });\n    })\n    .catch((err) => {\n      dispatch({ type: types.IS_OVERVIEW_DATA_LOADING, payload: false });\n      dispatch({ type: types.FETCH_OVERVIEW_DATA_FAILED, payload: {} });\n    });\n};\n\nexport const setOverviewDataLoading = (currentValue) => (dispatch) => {\n  dispatch({ type: types.IS_OVERVIEW_DATA_LOADING, payload: currentValue });\n};\n","const validateInput = (value) => {\n  const incorrectSigns = [\"/\", \"<\", \">\"];\n  const isValueIncorrect = incorrectSigns.some((el) => value.includes(el));\n  if (isValueIncorrect) {\n    return true;\n  }\n  if (!value) {\n    return true;\n  }\n  return false;\n};\n\nconst validateVolume = (value) => {\n  const regex = /^[0-9]{0,3}$/;\n  const isIncorrectValue = regex.test(value);\n\n  if (!isIncorrectValue) {\n    return true;\n  }\n  return false;\n};\n\nconst getGridCenteredProps = (width) => {\n  const gridCenteredProps = {\n    container: true,\n    item: true,\n    xs: width,\n    justify: \"center\",\n    alignItems: \"center\",\n  };\n  return gridCenteredProps;\n};\n\nconst utils = {\n  validateInput,\n  validateVolume,\n  getGridCenteredProps,\n};\n\nexport default utils;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ErrorComponent from \"../ErrorComponent/ErrorComponent\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport \"../../utils/customStyles.css\";\n\nconst cardStyle = {\n  width: \"100%\",\n  padding: \"10px\",\n  backgroundColor: \"#777\",\n  color: \"#FFF\",\n};\n\nconst StockList = ({\n  searchedData,\n  isSearchedDataFetchedSuccessfully,\n  filteredData,\n  showTransactionWindow,\n}) => {\n  const [isNoResult, setIsNoResult] = useState(false);\n\n  useEffect(() => {\n    if (!searchedData.length && isSearchedDataFetchedSuccessfully) {\n      return setIsNoResult(true);\n    }\n    if (searchedData.length && isSearchedDataFetchedSuccessfully) {\n      return setIsNoResult(false);\n    }\n  }, [searchedData, isSearchedDataFetchedSuccessfully]);\n\n  const renderNoResultMessage = () => {\n    if (isNoResult) {\n      return (\n        <Grid container item xs={12} justify=\"center\">\n          <div>No result found. Try again</div>\n        </Grid>\n      );\n    }\n  };\n\n  const renderDefaultMessage = () => {\n    if (!isNoResult && !filteredData.length) {\n      return (\n        <Grid container item xs={12} justify=\"center\">\n          <div>No stocks were searched yet</div>\n        </Grid>\n      );\n    }\n  };\n\n  const renderStockList = () => {\n    if (filteredData.length) {\n      const result = filteredData.map((el, i) => {\n        return (\n          <div key={`stock-list-element-${i}`} style={{ minWidth: \"100%\", marginBottom: \"20px\" }}>\n            <Button\n              style={{ padding: \"0\", minWidth: \"100%\" }}\n              onClick={() => showTransactionWindow(el)}\n            >\n              <Card style={cardStyle}>\n                <Grid item container xs={12} justify=\"space-between\">\n                  <div style={{ marginRight: \"25px\" }}>{el[\"1. symbol\"]}</div>\n                  <div style={{ textTransform: \"none\", textAlign: \"left\" }}>{el[\"2. name\"]}</div>\n                  <Grid item container xs={12} justify=\"flex-start\">\n                    <div>{el[\"4. region\"]}</div>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Button>\n          </div>\n        );\n      });\n      return result;\n    }\n  };\n\n  try {\n    return (\n      <Grid\n        container\n        item\n        xs={12}\n        justify=\"center\"\n        className={isNoResult || searchedData.length ? \"stock-list-wrapper\" : null}\n        style={{ marginTop: \"25px\" }}\n      >\n        {renderStockList()}\n        {renderNoResultMessage()}\n        {renderDefaultMessage()}\n      </Grid>\n    );\n  } catch (error) {\n    return <ErrorComponent message=\"Result stock list was crashed. Try refresh page\" />;\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    searchedData: state.searchedData,\n    isSearchedDataFetchedSuccessfully: state.isSearchedDataFetchedSuccessfully,\n  };\n};\n\nconst actions = null;\n\nexport default connect(mapStateToProps, actions)(StockList);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getSearchComponentData,\n  closeSearchDataNotification,\n  setSearchDataLoading,\n} from \"../../actions/actions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport utils from \"../../utils/utils\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ErrorComponent from \"../ErrorComponent/ErrorComponent\";\nimport StockList from \"../StockList/StockList\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport \"../../utils/customStyles.css\";\n\nconst SearchComponent = ({\n  getSearchComponentData,\n  isSearchDataLoading,\n  isSearchedDataFetchedSuccessfully,\n  isSearchedDataFetchedFailed,\n  closeSearchDataNotification,\n  setSearchDataLoading,\n  searchedData,\n  showTransactionWindow,\n}) => {\n  const [searchedPhrase, setSearchedPhrase] = useState(\"\");\n  const [stockInputError, setStockInputError] = useState(false);\n  const [market, setMarket] = useState(null);\n  const [marketOptions, setMarketOptions] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n\n  useEffect(() => {\n    setFilteredData([...searchedData]);\n  }, [searchedData]);\n\n  useEffect(() => {\n    if (isSearchedDataFetchedSuccessfully) {\n      const searchNotificationTimeout = setTimeout(() => {\n        closeSearchDataNotification(searchedData);\n      }, 5000);\n      return () => {\n        clearTimeout(searchNotificationTimeout);\n      };\n    }\n  }, [isSearchedDataFetchedSuccessfully]);\n\n  useEffect(() => {\n    // delete duplicate values:\n    if (searchedData.length) {\n      const duplicates = searchedData.map((el) => el[\"4. region\"]);\n      const distinctValues = new Set(duplicates);\n      setMarketOptions([...distinctValues]);\n    }\n  }, [searchedData]);\n\n  useEffect(() => {\n    const filterResult = searchedData.filter((el) => el[\"4. region\"] === market);\n    if (filterResult.length) {\n      return setFilteredData(filterResult);\n    }\n    return setFilteredData(searchedData);\n  }, [market]);\n\n  const handleSearchComponentChange = (e) => {\n    const isValueIncorrect = utils.validateInput(e.target.value);\n    setStockInputError(isValueIncorrect);\n    setSearchedPhrase(e.target.value);\n  };\n\n  const handleSearchClicked = () => {\n    getSearchComponentData(searchedPhrase);\n    setSearchedPhrase(\"\");\n  };\n\n  const handleSetMarket = (value) => {\n    if (value) {\n      return setMarket(value);\n    }\n    return setMarket(null);\n  };\n\n  const renderTransactionWindow = () => {\n    return (\n      <Snackbar\n        open={isSearchedDataFetchedSuccessfully || isSearchedDataFetchedFailed}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        onClose={() => closeSearchDataNotification(searchedData)}\n      >\n        <Alert\n          icon={false}\n          variant=\"filled\"\n          color={searchedData.length ? \"success\" : \"error\"}\n          elevation={6}\n          onClose={() => closeSearchDataNotification(searchedData)}\n        >\n          {searchedData.length ? \"Data was fetch successfully\" : \"No result found\"}\n        </Alert>\n      </Snackbar>\n    );\n  };\n\n  try {\n    return (\n      <>\n        <Grid container>\n          <Grid item xs={12}>\n            <h2 className=\"search-module-header\" style={{ textAlign: \"center\" }}>\n              Search company\n            </h2>\n          </Grid>\n          <Grid container item xs={12} justify=\"center\" alignItems=\"center\">\n            <TextField\n              id=\"company-input\"\n              label=\"Company name or symbol\"\n              variant=\"outlined\"\n              value={searchedPhrase}\n              disabled={\n                isSearchedDataFetchedSuccessfully ||\n                isSearchedDataFetchedFailed ||\n                isSearchDataLoading\n              }\n              helperText={\n                stockInputError\n                  ? !searchedPhrase\n                    ? \"Empty value is not allowed\"\n                    : \"Incorrect value. Signs <, >, / are not allowed.\"\n                  : \"\"\n              }\n              error={stockInputError}\n              onChange={(e) => handleSearchComponentChange(e)}\n              style={{ width: \"300px\", transition: \"0.3s\" }}\n            />\n          </Grid>\n          <Grid container item xs={12} justify=\"center\" alignItems=\"center\">\n            <Button\n              variant=\"outlined\"\n              disabled={\n                !searchedPhrase ||\n                stockInputError ||\n                isSearchedDataFetchedSuccessfully ||\n                isSearchedDataFetchedFailed\n              }\n              style={{ margin: \"30px 0\", transition: \"0.3s\" }}\n              onClick={handleSearchClicked}\n            >\n              Search\n            </Button>\n          </Grid>\n          <Grid container item xs={12} justify=\"center\" alignItems=\"center\">\n            <Autocomplete\n              id=\"filter-by-market-input\"\n              value={market}\n              options={marketOptions}\n              getOptionLabel={(marketOption) => marketOption}\n              onChange={(event, newValue) => handleSetMarket(newValue)}\n              style={{ width: \"300px\" }}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  variant=\"outlined\"\n                  label=\"Filter result by market\"\n                  margin=\"normal\"\n                />\n              )}\n            />\n          </Grid>\n          <Grid container item xs={12} justify=\"center\" alignItems=\"center\">\n            {isSearchDataLoading ? (\n              <CircularProgress />\n            ) : (\n              <StockList\n                filteredData={filteredData}\n                showTransactionWindow={showTransactionWindow}\n              />\n            )}\n          </Grid>\n        </Grid>\n        {renderTransactionWindow()}\n      </>\n    );\n  } catch (error) {\n    return <ErrorComponent message=\"Search input was crashed. Try refresh page\" />;\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isSearchedDataFetchedSuccessfully: state.isSearchedDataFetchedSuccessfully,\n    isSearchedDataFetchedFailed: state.isSearchedDataFetchedFailed,\n    searchedData: state.searchedData,\n    isSearchDataLoading: state.isSearchDataLoading,\n  };\n};\n\nconst actions = {\n  getSearchComponentData,\n  closeSearchDataNotification,\n  setSearchDataLoading,\n};\n\nexport default connect(mapStateToProps, actions)(SearchComponent);\n","import { Grid, TextField } from \"@material-ui/core\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport utils from \"../../utils/utils\";\nimport ErrorComponent from \"../ErrorComponent/ErrorComponent\";\n\nconst cellStyle = {\n  border: \"1px solid black\",\n  borderRadius: \"5px\",\n};\n\nconst cellStyleInside = {\n  borderTop: \"1px solid black\",\n};\n\nconst counterBtnStyle = {\n  minWidth: \"0\",\n  width: \"100%\",\n};\n\nconst minorTextStyle = {\n  fontSize: \"12px\",\n};\n\nconst VolumeComponent = ({ volumeCounter, setVolumeCounter, volumeError, setVolumeError }) => {\n  const increaseVolume = () => {\n    if (volumeCounter) {\n      setVolumeCounter(++volumeCounter);\n      return setVolumeError(false);\n    }\n    setVolumeError(false);\n    return setVolumeCounter(1);\n  };\n\n  const decreaseVolume = () => {\n    if (volumeCounter > 1) {\n      setVolumeCounter(--volumeCounter);\n      return setVolumeError(false);\n    }\n    setVolumeError(false);\n    return setVolumeCounter(1);\n  };\n\n  const setVolume = (e) => {\n    const currentValue = e.target.value;\n    const result = utils.validateVolume(currentValue);\n\n    if (!currentValue) {\n      setVolumeCounter(currentValue);\n      return setVolumeError(true);\n    }\n    if (!result && currentValue !== \"0\" && currentValue) {\n      setVolumeCounter(currentValue);\n      return setVolumeError(false);\n    }\n  };\n\n  try {\n    return (\n      <Grid container style={cellStyle}>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item xs={12}>\n            <TextField\n              error={volumeError}\n              value={volumeCounter}\n              onChange={(e) => setVolume(e)}\n              inputProps={{ className: \"volume-input\" }}\n              style={{\n                backgroundColor: volumeError ? \"rgba(255,0,0,0.3)\" : \"#FFF\",\n                transition: \"0.3s\",\n              }}\n            >\n              {volumeCounter}\n            </TextField>\n          </Grid>\n          <Grid item xs={12} style={minorTextStyle}>\n            volume\n          </Grid>\n        </Grid>\n        <Grid container direction=\"row\">\n          <Grid item xs={6} style={cellStyleInside}>\n            <Button onClick={() => decreaseVolume(volumeCounter)} style={counterBtnStyle}>\n              -\n            </Button>\n          </Grid>\n          <Grid item xs={6} style={cellStyleInside}>\n            <Button onClick={() => increaseVolume(volumeCounter)} style={counterBtnStyle}>\n              +\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  } catch (error) {\n    return <ErrorComponent message=\"Volume input was crashed. Try again\" />;\n  }\n};\n\nexport default VolumeComponent;\n","import React, { useState, useEffect } from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport ErrorComponent from \"../ErrorComponent/ErrorComponent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport utils from \"../../utils/utils\";\n\nconst positionElementStyle = {\n  fontSize: \"14px\",\n  textAlign: \"left\",\n  fontWeight: \"500\",\n};\n\nconst PositionList = ({ openPositions, showPositionInfo, setOpenPositions }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pages, setPages] = useState(1);\n  const maxPositionsOnPage = 4;\n\n  useEffect(() => {\n    const pagesQuantity =\n      openPositions.length % maxPositionsOnPage\n        ? Math.floor(openPositions.length / maxPositionsOnPage) + 1\n        : Math.floor(openPositions.length / maxPositionsOnPage);\n\n    if (pagesQuantity !== pages) {\n      setPages(pagesQuantity);\n      setCurrentPage(pagesQuantity);\n    }\n  }, [openPositions]);\n\n  const handleChangePage = (event, value) => {\n    setCurrentPage(value);\n  };\n\n  const handleCheckPosition = (e) => {\n    const currentClickedIndex = parseInt(e.target.name);\n    const positionToCompareIndex = openPositions.findIndex((el) => el[\"isChecked\"] === true);\n\n    // disable checkbox for all positions:\n    const result = openPositions.map((el) => {\n      el.isChecked = false;\n      return el;\n    });\n    // if was clicked the same checkbox again:\n    if (currentClickedIndex === positionToCompareIndex) {\n      return setOpenPositions([...result]);\n    }\n    // enable checkbox for specific position:\n    result[currentClickedIndex][\"isChecked\"] = true;\n    setOpenPositions([...result]);\n  };\n\n  const renderPositionListHeader = () => {\n    return (\n      <Grid\n        container\n        justify=\"flex-start\"\n        style={{\n          margin: showPositionInfo ? \"15px 0 0 0\" : \"0\",\n          height: showPositionInfo ? \"39px\" : \"0\",\n          fontWeight: \"700\",\n          transition: \"0.3s\",\n        }}\n      >\n        Open Positions:\n      </Grid>\n    );\n  };\n\n  const renderPositionList = () => {\n    const minRange = currentPage * maxPositionsOnPage - maxPositionsOnPage;\n    const maxRange = currentPage * maxPositionsOnPage;\n    return (\n      <Grid container direction=\"row\">\n        {openPositions.map((el, i) => {\n          if (i > minRange - 1 && i < maxRange) {\n            return (\n              <Grid\n                {...utils.getGridCenteredProps(12)}\n                style={positionElementStyle}\n                className=\"show-position\"\n                key={`position-element-${i}`}\n              >\n                <Grid item xs={2}>\n                  <Checkbox\n                    icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n                    checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n                    color=\"default\"\n                    onChange={(e) => handleCheckPosition(e)}\n                    checked={openPositions[i][\"isChecked\"]}\n                    name={`${i}`}\n                  />\n                </Grid>\n                <Grid item xs={5}>\n                  {el.symbol}\n                </Grid>\n                <Grid item xs={2}>\n                  {el.volume}\n                </Grid>\n                <Grid item xs={3}>\n                  {el.price}\n                </Grid>\n              </Grid>\n            );\n          }\n        })}\n      </Grid>\n    );\n  };\n\n  const renderPagination = () => {\n    if (openPositions.length <= maxPositionsOnPage) {\n      return null;\n    }\n    return <Pagination count={pages} page={currentPage} onChange={handleChangePage} />;\n  };\n\n  try {\n    return (\n      <Grid\n        container\n        justify=\"flex-start\"\n        style={{\n          transition: \"0.3s\",\n          minHeight: showPositionInfo ? \"100px\" : \"0\",\n          opacity: showPositionInfo ? \"1\" : \"0\",\n        }}\n      >\n        {renderPositionListHeader()}\n        {renderPositionList()}\n        {renderPagination()}\n      </Grid>\n    );\n  } catch (error) {\n    return <ErrorComponent message=\"Position list was crashed. Try again\" />;\n  }\n};\n\nexport default PositionList;\n","import Button from \"@material-ui/core/Button\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getTimeSeriesDailyAdjusted,\n  getOverview,\n  getGlobalQuoteCompany,\n  setOverviewDataLoading,\n} from \"../../actions/actions\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport InfoOutlined from \"@material-ui/icons/InfoOutlined\";\nimport Grid from \"@material-ui/core/Grid\";\nimport VolumeComponent from \"../VolumeComponent/VolumeComponent\";\nimport ErrorComponent from \"../ErrorComponent/ErrorComponent\";\nimport \"../../utils/customStyles.css\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport PositionList from \"../PositionList/PositionList\";\nimport utils from \"../../utils/utils\";\n\nconst CustomButton = withStyles({\n  root: {\n    minWidth: \"110px\",\n    color: \"#FFF !important\",\n    fontWeight: \"700\",\n    padding: \"20px 10px\",\n    fontSize: \"16px\",\n    display: \"flex\",\n    width: \"100%\",\n    flexDirection: \"row\",\n    transition: \"0.3s\",\n    \"& div:nth-child(2)\": {\n      fontSize: \"12px\",\n      fontWeight: \"500\",\n      textTransform: \"none\",\n      transition: \"0.3s\",\n    },\n    \"@media(min-width: 400px)\": {\n      minWidth: \"140px\",\n      padding: \"12px 10px\",\n      fontSize: \"20px\",\n      \"& div:nth-child(2)\": {\n        fontSize: \"16px\",\n      },\n    },\n  },\n})(Button);\n\nconst getTextAreaAutosizeStyle = (condition) => {\n  const textAreaAutosizeStyle = {\n    width: \"300px\",\n    minWidth: \"250px\",\n    minHeight: \"80px\",\n    maxWidth: \"300px\",\n    maxHeight: \"80px\",\n    transition: \"0.3s\",\n    height: condition ? \"80px\" : \"0\",\n    opacity: condition ? \"1\" : \"0\",\n  };\n  return textAreaAutosizeStyle;\n};\n\nconst getSellErrorMessageStyle = (condition) => {\n  const sellErrorMessageStyle = {\n    height: condition ? \"24px\" : \"0\",\n    marginTop: condition ? \"15px\" : \"0\",\n    transition: \"0.3s\",\n    fontWeight: \"600\",\n    color: \"#F00\",\n  };\n  return sellErrorMessageStyle;\n};\n\nconst TransactionCard = ({\n  companySymbol,\n  getOverview,\n  overviewData,\n  title,\n  isTimeSeriesDailyAdjustedFetchedSuccessfully,\n  isTimeSeriesDailyAdjustedFetchedFailed,\n  timesSeriesDailyAdjusted,\n  getTimeSeriesDailyAdjusted,\n  getGlobalQuoteCompany,\n  isGlobalQuoteFetchSuccessfully,\n  isGlobalQuoteFetchFailed,\n  globalQuote,\n  isOverviewDataFetchedSuccessfully,\n  setOverviewDataLoading,\n  isOverviewDataLoading,\n}) => {\n  const [isDescriptionVisible, setIsDescriptionVisible] = useState(false);\n  let [volumeCounter, setVolumeCounter] = useState(1);\n  const [volumeError, setVolumeError] = useState(false);\n  const [apiError, setApiError] = useState(false);\n  const [openPositions, setOpenPositions] = useState([]);\n  const [sellErrorMessage, setSellErrorMessage] = useState(\"\");\n  const [showPositionInfo, setShowPositionInfo] = useState(false);\n  const disabledButton = !isGlobalQuoteFetchSuccessfully || volumeError || apiError;\n\n  useEffect(() => {\n    // getTimeSeriesDailyAdjusted(companySymbol);\n    getGlobalQuoteCompany(companySymbol);\n  }, []);\n\n  useEffect(() => {\n    if (globalQuote[\"Note\"] || overviewData[\"Note\"]) {\n      return setApiError(true);\n    }\n    return setApiError(false);\n  }, [globalQuote]);\n\n  useEffect(() => {\n    if (openPositions.length) {\n      return setShowPositionInfo(true);\n    }\n    return setShowPositionInfo(false);\n  }, [openPositions]);\n\n  useEffect(() => {\n    if (sellErrorMessage) {\n      const sellErrorMessageTimeout = setTimeout(() => {\n        setSellErrorMessage(\"\");\n      }, 5000);\n      return () => {\n        clearTimeout(sellErrorMessageTimeout);\n      };\n    }\n  }, [sellErrorMessage]);\n\n  const toggleShowDescription = () => {\n    if (companySymbol !== overviewData[\"Symbol\"]) {\n      getOverview(companySymbol);\n    }\n    setIsDescriptionVisible(!isDescriptionVisible);\n  };\n\n  const calculateSellPrice = (price) => {\n    if (price) {\n      const priceNumber = parseFloat(price);\n      const result = (priceNumber - 0.1).toFixed(4);\n      return result;\n    }\n  };\n\n  const handleOpenPosition = (price) => {\n    const parsedPrice = parseFloat(price);\n    setOpenPositions([\n      ...openPositions,\n      {\n        symbol: companySymbol,\n        price: parsedPrice,\n        volume: volumeCounter,\n        isChecked: false,\n      },\n    ]);\n  };\n\n  const handleClosePosition = (price) => {\n    const checkedPositionIndex = openPositions.findIndex(({ isChecked }) => isChecked === true);\n    const checkedPosition = openPositions[checkedPositionIndex];\n    if (!openPositions.length) {\n      return setSellErrorMessage(\"No stocks to sell\");\n    }\n\n    if (checkedPositionIndex === -1) {\n      return setSellErrorMessage(\"No position checked\");\n    }\n\n    if (checkedPosition[\"volume\"] < volumeCounter) {\n      return setSellErrorMessage(\"Not enough stocks to sell\");\n    }\n    // reset error message:\n    setSellErrorMessage(\"\");\n    // subtract volume from picked position:\n    const mappedResult = openPositions.map((el) => {\n      if (el.isChecked) {\n        checkedPosition[\"volume\"] -= volumeCounter;\n        return checkedPosition;\n      }\n      return el;\n    });\n    // delete positions which current volume is zero:\n    if (!checkedPosition[\"volume\"]) {\n      const filteredPositions = openPositions.filter(({ volume }) => volume !== 0);\n      return setOpenPositions([...filteredPositions]);\n    }\n    return setOpenPositions([...mappedResult]);\n  };\n\n  const renderCardHeader = () => {\n    return (\n      <Grid {...utils.getGridCenteredProps(12)} style={{ marginBottom: \"20px\" }}>\n        <h2 className=\"transaction-card-header\" style={{ fontWeight: \"500\", margin: \"0\" }}>\n          {title}\n        </h2>\n        <Button onClick={toggleShowDescription} disabled={apiError}>\n          <InfoOutlined style={{ color: \"#2196f3\" }} />\n        </Button>\n      </Grid>\n    );\n  };\n\n  const renderTextArea = () => {\n    return (\n      <Grid\n        {...utils.getGridCenteredProps(12)}\n        style={{\n          height: isDescriptionVisible ? \"80px\" : \"0\",\n          transition: \"0.3s\",\n        }}\n      >\n        {isOverviewDataLoading ? (\n          <CircularProgress />\n        ) : (\n          <TextareaAutosize\n            rowsMax={5}\n            value={\n              isOverviewDataFetchedSuccessfully\n                ? overviewData[\"Description\"]\n                : \"This API is limited. Try again in one minute.\"\n            }\n            style={getTextAreaAutosizeStyle(isDescriptionVisible)}\n          />\n        )}\n      </Grid>\n    );\n  };\n\n  const renderApiWarning = () => {\n    return (\n      <>\n        {apiError ? (\n          <Grid container justify=\"center\">\n            <div style={{ margin: \"20px 0\" }}>This API is limited. Try again in one minute.</div>\n          </Grid>\n        ) : null}\n      </>\n    );\n  };\n\n  const renderSellButton = () => {\n    return (\n      <Grid {...utils.getGridCenteredProps(4)}>\n        <CustomButton\n          disabled={disabledButton}\n          style={{ backgroundColor: disabledButton ? \"#777\" : \"#F00\" }}\n          onClick={() => handleClosePosition()}\n        >\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12}>\n              sell\n            </Grid>\n            <Grid item xs={12}>\n              {!isGlobalQuoteFetchSuccessfully\n                ? \"Loading...\"\n                : globalQuote[\"Note\"]\n                ? \"---\"\n                : calculateSellPrice(globalQuote[\"Global Quote\"][\"05. price\"])}\n            </Grid>\n          </Grid>\n        </CustomButton>\n      </Grid>\n    );\n  };\n\n  const renderVolumeComponent = () => {\n    return (\n      <Grid {...utils.getGridCenteredProps(3)}>\n        <VolumeComponent\n          volumeCounter={volumeCounter}\n          setVolumeCounter={setVolumeCounter}\n          volumeError={volumeError}\n          setVolumeError={setVolumeError}\n        />\n      </Grid>\n    );\n  };\n\n  const renderBuyButton = () => {\n    return (\n      <Grid {...utils.getGridCenteredProps(4)}>\n        <CustomButton\n          style={{ backgroundColor: disabledButton ? \"#777\" : \"#32c972\" }}\n          disabled={disabledButton}\n          onClick={() => handleOpenPosition(globalQuote[\"Global Quote\"][\"05. price\"])}\n        >\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12}>\n              buy\n            </Grid>\n            <Grid item xs={12}>\n              {!isGlobalQuoteFetchSuccessfully\n                ? \"Loading...\"\n                : globalQuote[\"Note\"]\n                ? \"---\"\n                : globalQuote[\"Global Quote\"][\"05. price\"]}\n            </Grid>\n          </Grid>\n        </CustomButton>\n      </Grid>\n    );\n  };\n\n  const renderSellErrorMessage = () => {\n    return (\n      <Grid\n        {...utils.getGridCenteredProps(12)}\n        style={getSellErrorMessageStyle(sellErrorMessage.length)}\n      >\n        {sellErrorMessage}\n      </Grid>\n    );\n  };\n\n  try {\n    return (\n      <Grid container>\n        {renderCardHeader()}\n        {renderTextArea()}\n        {renderApiWarning()}\n        <Grid container justify=\"space-between\" alignItems=\"center\" style={{ marginTop: \"20px\" }}>\n          {renderSellButton()}\n          {renderVolumeComponent()}\n          {renderBuyButton()}\n        </Grid>\n        {renderSellErrorMessage()}\n        <PositionList\n          openPositions={openPositions}\n          showPositionInfo={showPositionInfo}\n          setOpenPositions={setOpenPositions}\n        />\n      </Grid>\n    );\n  } catch (error) {\n    return <ErrorComponent message=\"Transaction card was crashed. Try again\" />;\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isTimeSeriesDailyAdjustedFetchedSuccessfully:\n      state.isTimeSeriesDailyAdjustedFetchedSuccessfully,\n    isTimeSeriesDailyAdjustedFetchedFailed: state.isTimeSeriesDailyAdjustedFetchedFailed,\n    timesSeriesDailyAdjusted: state.timesSeriesDailyAdjusted,\n    overviewData: state.overviewData,\n    globalQuote: state.globalQuote,\n    isGlobalQuoteFetchSuccessfully: state.isGlobalQuoteFetchSuccessfully,\n    isGlobalQuoteFetchFailed: state.isGlobalQuoteFetchFailed,\n    isOverviewDataFetchedSuccessfully: state.isOverviewDataFetchedSuccessfully,\n    isOverviewDataLoading: state.isOverviewDataLoading,\n  };\n};\n\nconst actions = {\n  getTimeSeriesDailyAdjusted,\n  getOverview,\n  getGlobalQuoteCompany,\n  setOverviewDataLoading,\n};\n\nexport default connect(mapStateToProps, actions)(TransactionCard);\n","import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport ErrorComponent from \"../ErrorComponent/ErrorComponent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport SearchComponent from \"../SearchComponent/SearchComponent\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport TransactionCard from \"../TransactionCard/TransactionCard\";\n\nconst wrapperStyle = {\n  minHeight: \"95vh\",\n  padding: \"20px\",\n  backgroundColor: \"#BBB\",\n  boxSizing: \"border-box\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n};\n\nconst cardStyle = {\n  marginBottom: \"25px\",\n  opacity: \"0\",\n  maxWidth: \"500px\",\n  width: \"100%\",\n};\n\nconst searchModuleStyle = {\n  padding: \"0 20px 40px 20px\",\n  opacity: \"0\",\n  maxWidth: \"500px\",\n  boxSizing: \"border-box\",\n  width: \"100%\",\n};\n\nconst Dashboard = () => {\n  const [transactionWindow, setTransactionWindow] = useState(null);\n\n  const showTransactionWindow = (company) => {\n    const companySymbol = company[\"1. symbol\"];\n    setTransactionWindow(\n      <SweetAlert\n        title=\"\"\n        onConfirm={() => setTransactionWindow(null)}\n        onCancel={() => setTransactionWindow(null)}\n        showConfirm={false}\n        style={{ margin: \"0 !important\" }}\n      >\n        <TransactionCard\n          companySymbol={companySymbol}\n          title={`${company[\"1. symbol\"]}, ${company[\"2. name\"]}`}\n        />\n      </SweetAlert>\n    );\n  };\n\n  try {\n    return (\n      <div style={wrapperStyle}>\n        {transactionWindow}\n        <Card className=\"app-header\" style={cardStyle}>\n          <Grid container>\n            <Grid item xs={12}>\n              <h1 style={{ textAlign: \"center\" }}>Stock app</h1>\n            </Grid>\n          </Grid>\n        </Card>\n        <Card className=\"search-module-card\" style={searchModuleStyle}>\n          <Grid container>\n            <SearchComponent showTransactionWindow={showTransactionWindow} />\n          </Grid>\n        </Card>\n      </div>\n    );\n  } catch (error) {\n    return <ErrorComponent message=\"Dashboard was crashed. Try refresh page\" />;\n  }\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport \"../../utils/customStyles.css\";\n\nconst footerStyle = {\n  height: \"5vh\",\n  boxSizing: \"border-box\",\n  padding: \"0px 20px\",\n  textAlign: \"right\",\n  color: \"#FFF\",\n  backgroundColor: \"#4D4D4D\",\n  fontWeight: \"500\",\n  lineHeight: \"5vh\",\n};\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\" style={footerStyle}>\n      <p style={{ margin: \"0\", opacity: \"0\" }}>Created by Marek Szczegodziński 2021</p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport Footer from \"./components/Footer/Footer\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import types from \"../types\";\n\nconst initialState = {\n  isTimeSeriesDailyAdjustedFetchedSuccessfully: false,\n  isTimeSeriesDailyAdjustedFetchedFailed: false,\n  timesSeriesDailyAdjusted: {},\n  isSearchedDataFetchedSuccessfully: false,\n  isSearchedDataFetchedFailed: false,\n  searchedData: [],\n  isSearchDataLoading: false,\n  isIntradayDataLoading: false,\n  isDailyAdjustedDataLoading: false,\n  isOverviewDataFetchedSuccessfully: false,\n  isOverviewDataFetchedFailed: false,\n  isOverviewDataLoading: false,\n  overviewData: {},\n  isGlobalQuoteFetchSuccessfully: false,\n  isGlobalQuoteFetchFailed: false,\n  globalQuote: {},\n};\n\nconst dashboardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.FETCH_OVERVIEW_DATA_SUCCESSFULLY:\n      return {\n        ...state,\n        isOverviewDataFetchedSuccessfully: true,\n        isOverviewDataFetchedFailed: false,\n        overviewData: action.payload,\n      };\n    case types.FETCH_OVERVIEW_DATA_FAILED:\n      return {\n        ...state,\n        isOverviewDataFetchedSuccessfully: false,\n        isOverviewDataFetchedFailed: true,\n        overviewData: action.payload,\n      };\n    case types.FETCH_TIME_SERIES_DAILY_ADJUSTED_SUCCESSFULLY:\n      return {\n        ...state,\n        isTimeSeriesDailyAdjustedFetchedSuccessfully: true,\n        isTimeSeriesDailyAdjustedFetchedFailed: false,\n        timesSeriesDailyAdjusted: action.payload,\n      };\n    case types.FETCH_TIME_SERIES_DAILY_ADJUSTED_FAILED:\n      return {\n        ...state,\n        isTimeSeriesDailyAdjustedFetchedSuccessfully: false,\n        isTimeSeriesDailyAdjustedFetchedFailed: true,\n        timesSeriesDailyAdjusted: {},\n      };\n    case types.FETCH_SEARCH_ENDPOINT_DATA:\n      return {\n        ...state,\n        searchedData: action.payload,\n        isSearchedDataFetchedSuccessfully: action.isSearchedDataFetchedSuccessfully,\n        isSearchedDataFetchedFailed: action.isSearchedDataFetchedFailed,\n      };\n    case types.IS_SEARCH_DATA_LOADING:\n      return {\n        ...state,\n        isSearchDataLoading: action.payload,\n      };\n    case types.FETCH_GLOBAL_QUOTE_SUCCESSFULLY:\n      return {\n        ...state,\n        isGlobalQuoteFetchSuccessfully: true,\n        isGlobalQuoteFetchFailed: false,\n        globalQuote: action.payload,\n      };\n    case types.FETCH_GLOBAL_QUOTE_FAILED:\n      return {\n        ...state,\n        isGlobalQuoteFetchSuccessfully: false,\n        isGlobalQuoteFetchFailed: true,\n        globalQuote: {},\n      };\n    case types.RESET_GLOBAL_QUOTE:\n      return {\n        ...state,\n        isGlobalQuoteFetchSuccessfully: false,\n        isGlobalQuoteFetchFailed: false,\n        globalQuote: {},\n      };\n    case types.IS_OVERVIEW_DATA_LOADING: {\n      return {\n        ...state,\n        isOverviewDataLoading: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default dashboardReducer;\n","import dashboardReducer from './reducers/dashboardReducer';\nimport { applyMiddleware, createStore } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(\n  dashboardReducer,\n  composeWithDevTools(applyMiddleware(thunk, logger))\n)\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}